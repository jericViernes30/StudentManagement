*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

:where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
  color-scheme: light;
  --color-base-100: oklch(100% 0 0);
  --color-base-200: oklch(98% 0 0);
  --color-base-300: oklch(95% 0 0);
  --color-base-content: oklch(21% 0.006 285.885);
  --color-primary: oklch(45% 0.24 277.023);
  --color-primary-content: oklch(93% 0.034 272.788);
  --color-secondary: oklch(65% 0.241 354.308);
  --color-secondary-content: oklch(94% 0.028 342.258);
  --color-accent: oklch(77% 0.152 181.912);
  --color-accent-content: oklch(38% 0.063 188.416);
  --color-neutral: oklch(14% 0.005 285.823);
  --color-neutral-content: oklch(92% 0.004 286.32);
  --color-info: oklch(74% 0.16 232.661);
  --color-info-content: oklch(29% 0.066 243.157);
  --color-success: oklch(76% 0.177 163.223);
  --color-success-content: oklch(37% 0.077 168.94);
  --color-warning: oklch(82% 0.189 84.429);
  --color-warning-content: oklch(41% 0.112 45.904);
  --color-error: oklch(71% 0.194 13.428);
  --color-error-content: oklch(27% 0.105 12.094);
  --radius-selector: 0.5rem;
  --radius-field: 0.25rem;
  --radius-box: 0.5rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;
    --color-base-100: oklch(25.33% 0.016 252.42);
    --color-base-200: oklch(23.26% 0.014 253.1);
    --color-base-300: oklch(21.15% 0.012 254.09);
    --color-base-content: oklch(97.807% 0.029 256.847);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(96% 0.018 272.314);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}

:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
  color-scheme: light;
  --color-base-100: oklch(100% 0 0);
  --color-base-200: oklch(98% 0 0);
  --color-base-300: oklch(95% 0 0);
  --color-base-content: oklch(21% 0.006 285.885);
  --color-primary: oklch(45% 0.24 277.023);
  --color-primary-content: oklch(93% 0.034 272.788);
  --color-secondary: oklch(65% 0.241 354.308);
  --color-secondary-content: oklch(94% 0.028 342.258);
  --color-accent: oklch(77% 0.152 181.912);
  --color-accent-content: oklch(38% 0.063 188.416);
  --color-neutral: oklch(14% 0.005 285.823);
  --color-neutral-content: oklch(92% 0.004 286.32);
  --color-info: oklch(74% 0.16 232.661);
  --color-info-content: oklch(29% 0.066 243.157);
  --color-success: oklch(76% 0.177 163.223);
  --color-success-content: oklch(37% 0.077 168.94);
  --color-warning: oklch(82% 0.189 84.429);
  --color-warning-content: oklch(41% 0.112 45.904);
  --color-error: oklch(71% 0.194 13.428);
  --color-error-content: oklch(27% 0.105 12.094);
  --radius-selector: 0.5rem;
  --radius-field: 0.25rem;
  --radius-box: 0.5rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

:root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
  color-scheme: dark;
  --color-base-100: oklch(25.33% 0.016 252.42);
  --color-base-200: oklch(23.26% 0.014 253.1);
  --color-base-300: oklch(21.15% 0.012 254.09);
  --color-base-content: oklch(97.807% 0.029 256.847);
  --color-primary: oklch(58% 0.233 277.117);
  --color-primary-content: oklch(96% 0.018 272.314);
  --color-secondary: oklch(65% 0.241 354.308);
  --color-secondary-content: oklch(94% 0.028 342.258);
  --color-accent: oklch(77% 0.152 181.912);
  --color-accent-content: oklch(38% 0.063 188.416);
  --color-neutral: oklch(14% 0.005 285.823);
  --color-neutral-content: oklch(92% 0.004 286.32);
  --color-info: oklch(74% 0.16 232.661);
  --color-info-content: oklch(29% 0.066 243.157);
  --color-success: oklch(76% 0.177 163.223);
  --color-success-content: oklch(37% 0.077 168.94);
  --color-warning: oklch(82% 0.189 84.429);
  --color-warning-content: oklch(41% 0.112 45.904);
  --color-error: oklch(71% 0.194 13.428);
  --color-error-content: oklch(27% 0.105 12.094);
  --radius-selector: 0.5rem;
  --radius-field: 0.25rem;
  --radius-box: 0.5rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

:root, [data-theme] {
  background-color: var(--root-bg, var(--color-base-100));
  color: var(--color-base-content);
}

:root {
  scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
}

@property --radialprogress {
  syntax: "<percentage>";

  inherits: true;

  initial-value: 0%;
}

:root {
  --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
}

.chat {
  --mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e");
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.link {
  cursor: pointer;
  text-decoration-line: underline;
}

.link:focus {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .link:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.link:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

.dropdown {
  position: relative;
  display: inline-block;
  position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);
}

.dropdown > *:not(summary):focus {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .dropdown > *:not(summary):focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.dropdown .dropdown-content {
  position: absolute;
}

.dropdown:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) .dropdown-content {
  display: none;
  transform-origin: top;
  opacity: 0%;
  scale: 95%;
}

.dropdown[popover], .dropdown .dropdown-content {
  z-index: 999;
  animation: dropdown 0.2s;
  transition-property: opacity, scale, display;
  transition-behavior: allow-discrete;
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

@starting-style {
  .dropdown[popover], .dropdown .dropdown-content {
    scale: 95%;
    opacity: 0;
  }
}

.dropdown.dropdown-open > [tabindex]:first-child, .dropdown:not(.dropdown-hover):focus > [tabindex]:first-child, .dropdown:focus-within > [tabindex]:first-child {
  pointer-events: none;
}

.dropdown.dropdown-open .dropdown-content, .dropdown:not(.dropdown-hover):focus .dropdown-content, .dropdown:focus-within .dropdown-content {
  opacity: 100%;
}

.dropdown.dropdown-hover:hover .dropdown-content {
  opacity: 100%;
  scale: 100%;
}

.dropdown:is(details) summary::-webkit-details-marker {
  display: none;
}

.dropdown.dropdown-open .dropdown-content, .dropdown:focus .dropdown-content, .dropdown:focus-within .dropdown-content {
  scale: 100%;
}

.dropdown:where([popover]) {
  background: #0000;
}

.dropdown[popover] {
  position: fixed;
  color: inherit;
}

@supports not (position-area: bottom) {
  .dropdown[popover] {
    margin: auto;
  }

  .dropdown[popover].dropdown-open:not(:popover-open) {
    display: none;
    transform-origin: top;
    opacity: 0%;
    scale: 95%;
  }

  .dropdown[popover]::backdrop {
    background-color: color-mix(in oklab, #000 30%, #0000);
  }
}

.dropdown[popover]:not(.dropdown-open, :popover-open) {
  display: none;
  transform-origin: top;
  opacity: 0%;
  scale: 95%;
}

.dropdown-start :where(.dropdown-content) {
  inset-inline-end: auto;
}

.dropdown-start.dropdown-left .dropdown-content {
  top: calc(0.25rem * 0);
  bottom: auto;
}

.dropdown-start.dropdown-right .dropdown-content {
  top: calc(0.25rem * 0);
  bottom: auto;
}

.dropdown-center :where(.dropdown-content) {
  inset-inline-end: calc(1/2 * 100%);
  translate: 50% 0;
}

[dir="rtl"] .dropdown-center :where(.dropdown-content) {
  translate: -50% 0;
}

.dropdown-center.dropdown-left .dropdown-content {
  top: auto;
  bottom: calc(1/2 * 100%);
  translate: 0 50%;
}

.dropdown-center.dropdown-right .dropdown-content {
  top: auto;
  bottom: calc(1/2 * 100%);
  translate: 0 50%;
}

.dropdown-end :where(.dropdown-content) {
  inset-inline-end: calc(0.25rem * 0);
  translate: 0 0;
}

.dropdown-end.dropdown-left .dropdown-content {
  top: auto;
  bottom: calc(0.25rem * 0);
}

.dropdown-end.dropdown-right .dropdown-content {
  top: auto;
  bottom: calc(0.25rem * 0);
}

.dropdown-left .dropdown-content {
  inset-inline-end: 100%;
  top: calc(0.25rem * 0);
  bottom: auto;
  transform-origin: right;
}

.dropdown-right .dropdown-content {
  inset-inline-start: 100%;
  top: calc(0.25rem * 0);
  bottom: auto;
  transform-origin: left;
}

.dropdown-bottom .dropdown-content {
  top: 100%;
  bottom: auto;
  transform-origin: top;
}

.dropdown-top .dropdown-content {
  top: auto;
  bottom: 100%;
  transform-origin: bottom;
}

@keyframes dropdown {
  0% {
    opacity: 0;
  }
}

.alert {
  display: grid;
  align-items: center;
  gap: calc(0.25rem * 4);
  border-radius: var(--radius-box);
  padding-inline: calc(0.25rem * 4);
  padding-block: calc(0.25rem * 3);
  color: var(--color-base-content);
  background-color: var(--alert-color, var(--color-base-200));
  justify-content: start;
  justify-items: start;
  grid-auto-flow: column;
  grid-template-columns: auto;
  text-align: start;
  border: var(--border) solid var(--color-base-200);
  font-size: 0.875rem;
  line-height: 1.25rem;
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
  box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px color-mix( in oklab, color-mix(in oklab, #000 20%, var(--alert-color, var(--color-base-200))) calc(var(--depth) * 20%), #0000 ), 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
}

.alert:has(:nth-child(2)) {
  grid-template-columns: auto minmax(auto, 1fr);
}

.alert.alert-outline {
  background-color: transparent;
  color: var(--alert-color);
  box-shadow: none;
  background-image: none;
}

.alert.alert-dash {
  background-color: transparent;
  color: var(--alert-color);
  border-style: dashed;
  box-shadow: none;
  background-image: none;
}

.alert.alert-soft {
  color: var(--alert-color, var(--color-base-content));
  background: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 8%, var(--color-base-100) );
  border-color: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 10%, var(--color-base-100) );
  box-shadow: none;
  background-image: none;
}

.alert-success {
  border-color: var(--color-success);
  color: var(--color-success-content);
  --alert-color: var(--color-success);
}

.alert-error {
  border-color: var(--color-error);
  color: var(--color-error-content);
  --alert-color: var(--color-error);
}

.select {
  border: var(--border) solid #0000;
  position: relative;
  display: inline-flex;
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  align-items: center;
  gap: calc(0.25rem * 1.5);
  background-color: var(--color-base-100);
  padding-inline-start: calc(0.25rem * 4);
  padding-inline-end: calc(0.25rem * 7);
  vertical-align: middle;
  width: clamp(3rem, 20rem, 100%);
  height: var(--size);
  font-size: 0.875rem;
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  background-image: linear-gradient(45deg, #0000 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, #0000 50%);
  background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);
  background-size: 4px 4px, 4px 4px;
  background-repeat: no-repeat;
  text-overflow: ellipsis;
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  border-color: var(--input-color);
  --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
  --size: calc(var(--size-field, 0.25rem) * 10);
}

[dir="rtl"] .select {
  background-position: calc(0% + 12px) calc(1px + 50%), calc(0% + 16px) calc(1px + 50%);
}

.select select {
  margin-inline-start: calc(0.25rem * -4);
  margin-inline-end: calc(0.25rem * -7);
  width: calc(100% + 2.75rem);
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding-inline-start: calc(0.25rem * 4);
  padding-inline-end: calc(0.25rem * 7);
  height: calc(100% - 2px);
  background: inherit;
  border-radius: inherit;
  border-style: none;
}

.select select:focus, .select select:focus-within {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .select select:focus, .select select:focus-within {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.select select:not(:last-child) {
  margin-inline-end: calc(0.25rem * -5.5);
  background-image: none;
}

.select:focus, .select:focus-within {
  --input-color: var(--color-base-content);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
  outline: 2px solid var(--input-color);
  outline-offset: 2px;
  isolation: isolate;
  z-index: 1;
}

.select:has(> select[disabled]), .select:is(:disabled, [disabled]) {
  cursor: not-allowed;
  border-color: var(--color-base-200);
  background-color: var(--color-base-200);
  color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
}

.select:has(> select[disabled])::-moz-placeholder, .select:is(:disabled, [disabled])::-moz-placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.select:has(> select[disabled])::placeholder, .select:is(:disabled, [disabled])::placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.select:has(> select[disabled]) > select[disabled] {
  cursor: not-allowed;
}

@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}

.footer {
  display: grid;
  width: 100%;
  grid-auto-flow: row;
  place-items: start;
  -moz-column-gap: calc(0.25rem * 4);
       column-gap: calc(0.25rem * 4);
  row-gap: calc(0.25rem * 10);
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.footer > * {
  display: grid;
  place-items: start;
  gap: calc(0.25rem * 2);
}

.footer.footer-center {
  grid-auto-flow: column dense;
  place-items: center;
  text-align: center;
}

.footer.footer-center > * {
  place-items: center;
}

.table {
  font-size: 0.875rem;
  position: relative;
  width: 100%;
  border-radius: var(--radius-box);
  text-align: left;
}

.table:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
  text-align: right;
}

@media (hover: hover) {
  .table tr.row-hover:hover, .table tr.row-hover:nth-child(even):hover {
    background-color: var(--color-base-200);
  }
}

.table :where(th, td) {
  padding-inline: calc(0.25rem * 4);
  padding-block: calc(0.25rem * 3);
  vertical-align: middle;
}

.table :where(thead, tfoot) {
  white-space: nowrap;
  color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
  font-size: 0.875rem;
  font-weight: 600;
}

.table :where(tfoot) {
  border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
}

.table :where(.table-pin-rows thead tr) {
  position: sticky;
  top: calc(0.25rem * 0);
  z-index: 1;
  background-color: var(--color-base-100);
}

.table :where(.table-pin-rows tfoot tr) {
  position: sticky;
  bottom: calc(0.25rem * 0);
  z-index: 1;
  background-color: var(--color-base-100);
}

.table :where(.table-pin-cols tr th) {
  position: sticky;
  right: calc(0.25rem * 0);
  left: calc(0.25rem * 0);
  background-color: var(--color-base-100);
}

.table :where(thead tr, tbody tr:not(:last-child)) {
  border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
}

.input {
  cursor: text;
  border: var(--border) solid #0000;
  position: relative;
  display: inline-flex;
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  align-items: center;
  gap: calc(0.25rem * 2);
  background-color: var(--color-base-100);
  padding-inline: calc(0.25rem * 3);
  vertical-align: middle;
  white-space: nowrap;
  width: clamp(3rem, 20rem, 100%);
  height: var(--size);
  font-size: 0.875rem;
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  border-color: var(--input-color);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  --size: calc(var(--size-field, 0.25rem) * 10);
  --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
}

.input:where(input) {
  display: inline-flex;
}

.input :where(input) {
  display: inline-flex;
  height: 100%;
  width: 100%;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: transparent;
  border: none;
}

.input :where(input):focus, .input :where(input):focus-within {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .input :where(input):focus, .input :where(input):focus-within {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.input :where(input[type="date"]) {
  display: inline-block;
}

.input:focus, .input:focus-within {
  --input-color: var(--color-base-content);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
  outline: 2px solid var(--input-color);
  outline-offset: 2px;
  isolation: isolate;
  z-index: 1;
}

.input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
  cursor: not-allowed;
  border-color: var(--color-base-200);
  background-color: var(--color-base-200);
  color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
}

.input:has(> input[disabled])::-moz-placeholder, .input:is(:disabled, [disabled])::-moz-placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.input:has(> input[disabled])::placeholder, .input:is(:disabled, [disabled])::placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
  box-shadow: none;
}

.input:has(> input[disabled]) > input[disabled] {
  cursor: not-allowed;
}

.input::-webkit-date-and-time-value {
  text-align: inherit;
}

.input[type="number"]::-webkit-inner-spin-button {
  margin-block: calc(0.25rem * -3);
  margin-inline-end: calc(0.25rem * -3);
}

.input::-webkit-calendar-picker-indicator {
  position: absolute;
  inset-inline-end: 0.75em;
}

.toggle {
  border: var(--border) solid currentColor;
  color: var(--input-color);
  position: relative;
  display: inline-grid;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  place-content: center;
  vertical-align: middle;
  webkit-user-select: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  grid-template-columns: 0fr 1fr 1fr;
  --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
  border-radius: calc( var(--radius-selector) + min(var(--toggle-p), var(--radius-selector-max)) + min(var(--border), var(--radius-selector-max)) );
  padding: var(--toggle-p);
  box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset;
  transition: color 0.3s, grid-template-columns 0.2s;
  --input-color: color-mix(in oklab, var(--color-base-content) 50%, #0000);
  --toggle-p: calc(var(--size) * 0.125);
  --size: calc(var(--size-selector, 0.25rem) * 6);
  width: calc((var(--size) * 2) - (var(--border) + var(--toggle-p)) * 2);
  height: var(--size);
}

.toggle > * {
  z-index: 1;
  grid-column: span 1 / span 1;
  grid-column-start: 2;
  grid-row-start: 1;
  height: 100%;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: transparent;
  padding: calc(0.25rem * 0.5);
  transition: opacity 0.2s, rotate 0.4s;
  border: none;
}

.toggle > *:focus {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .toggle > *:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.toggle > *:nth-child(2) {
  color: var(--color-base-100);
  rotate: 0deg;
}

.toggle > *:nth-child(3) {
  color: var(--color-base-100);
  opacity: 0%;
  rotate: -15deg;
}

.toggle:has(:checked) > :nth-child(2) {
  opacity: 0%;
  rotate: 15deg;
}

.toggle:has(:checked) > :nth-child(3) {
  opacity: 100%;
  rotate: 0deg;
}

.toggle:before {
  position: relative;
  inset-inline-start: calc(0.25rem * 0);
  grid-column-start: 2;
  grid-row-start: 1;
  aspect-ratio: 1 / 1;
  height: 100%;
  border-radius: var(--radius-selector);
  background-color: currentColor;
  translate: 0;
  --tw-content: "";
  content: var(--tw-content);
  transition: background-color 0.1s, translate 0.2s, inset-inline-start 0.2s;
  box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
}

@media (forced-colors: active) {
  .toggle:before {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
    outline-offset: calc(1px * -1);
  }
}

@media print {
  .toggle:before {
    outline: 0.25rem solid;
    outline-offset: -1rem;
  }
}

.toggle:focus-visible, .toggle:has(:focus-visible) {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

.toggle:checked, .toggle[aria-checked="true"], .toggle:has(> input:checked) {
  grid-template-columns: 1fr 1fr 0fr;
  background-color: var(--color-base-100);
  --input-color: var(--color-base-content);
}

.toggle:checked:before, .toggle[aria-checked="true"]:before, .toggle:has(> input:checked):before {
  background-color: currentColor;
}

@starting-style {
  .toggle:checked:before, .toggle[aria-checked="true"]:before, .toggle:has(> input:checked):before {
    opacity: 0;
  }
}

.toggle:indeterminate {
  grid-template-columns: 0.5fr 1fr 0.5fr;
}

.toggle:disabled {
  cursor: not-allowed;
  opacity: 30%;
}

.toggle:disabled:before {
  background-color: transparent;
  border: var(--border) solid currentColor;
}

.navbar {
  display: flex;
  width: 100%;
  align-items: center;
  padding: 0.5rem;
  min-height: 4rem;
}

.navbar-start {
  display: inline-flex;
  align-items: center;
  width: 50%;
  justify-content: flex-start;
}

.navbar-center {
  display: inline-flex;
  align-items: center;
  flex-shrink: 0;
}

.navbar-end {
  display: inline-flex;
  align-items: center;
  width: 50%;
  justify-content: flex-end;
}

.label {
  display: inline-flex;
  align-items: center;
  gap: calc(0.25rem * 1.5);
  white-space: nowrap;
  color: color-mix(in oklab, currentColor 60%, transparent);
}

.label:has(input) {
  cursor: pointer;
}

.label:is(.input > *, .select > *) {
  display: flex;
  height: calc(100% - 0.5rem);
  align-items: center;
  padding-inline: calc(0.25rem * 3);
  white-space: nowrap;
  font-size: inherit;
}

.label:is(.input > *, .select > *):first-child {
  margin-inline-start: calc(0.25rem * -3);
  margin-inline-end: calc(0.25rem * 3);
  border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
}

.label:is(.input > *, .select > *):last-child {
  margin-inline-start: calc(0.25rem * 3);
  margin-inline-end: calc(0.25rem * -3);
  border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
}

.menu {
  display: flex;
  width: -moz-fit-content;
  width: fit-content;
  flex-direction: column;
  flex-wrap: wrap;
  padding: calc(0.25rem * 2);
  --menu-active-fg: var(--color-neutral-content);
  --menu-active-bg: var(--color-neutral);
  font-size: 0.875rem;
}

.menu :where(li ul) {
  position: relative;
  margin-inline-start: calc(0.25rem * 4);
  padding-inline-start: calc(0.25rem * 2);
  white-space: nowrap;
}

.menu :where(li ul):before {
  position: absolute;
  inset-inline-start: calc(0.25rem * 0);
  top: calc(0.25rem * 3);
  bottom: calc(0.25rem * 3);
  background-color: var(--color-base-content);
  opacity: 10%;
  width: var(--border);
  content: "";
}

.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
  display: none;
}

.menu :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  display: grid;
  grid-auto-flow: column;
  align-content: flex-start;
  align-items: center;
  gap: calc(0.25rem * 2);
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 1.5);
  text-align: start;
  transition-property: color, background-color, box-shadow;
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  grid-auto-columns: minmax(auto, max-content) auto max-content;
  text-wrap: balance;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.menu :where(li > details > summary) {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where(li > details > summary) {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.menu :where(li > details > summary)::-webkit-details-marker {
  display: none;
}

.menu :where(li > details > summary):after, .menu :where(li > .menu-dropdown-toggle):after {
  justify-self: flex-end;
  display: block;
  height: 0.375rem;
  width: 0.375rem;
  rotate: -135deg;
  translate: 0 -1px;
  transition-property: rotate, translate;
  transition-duration: 0.2s;
  content: "";
  transform-origin: 50% 50%;
  box-shadow: 2px 2px inset;
  pointer-events: none;
}

.menu :where(li > details[open] > summary):after, .menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
  rotate: 45deg;
  translate: 0 1px;
}

.menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
  cursor: pointer;
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  color: var(--color-base-content);
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
  cursor: pointer;
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
  box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
}

.menu :where(li:empty) {
  background-color: var(--color-base-content);
  opacity: 10%;
  margin: 0.5rem 1rem;
  height: 1px;
}

.menu :where(li) {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: stretch;
}

.menu :where(li) .badge {
  justify-self: flex-end;
}

.menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
  color: var(--menu-active-fg);
  background-color: var(--menu-active-bg);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
}

.menu :where(li) > *:not(ul, .menu-title, details, .btn):active:not(.menu :where(li) > *:not(ul, .menu-title, details, .btn):active:active), .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active:not(.menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active:active), .menu :where(li) > details > summary:active:not(.menu :where(li) > details > summary:active:active) {
  box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
}

.menu :where(li).menu-disabled {
  pointer-events: none;
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.menu .dropdown:focus-within .menu-dropdown-toggle:after {
  rotate: 45deg;
  translate: 0 1px;
}

.menu .dropdown-content {
  margin-top: calc(0.25rem * 2);
  padding: calc(0.25rem * 2);
}

.menu .dropdown-content:before {
  display: none;
}

.menu-horizontal {
  display: inline-flex;
  flex-direction: row;
}

.menu-horizontal > li:not(.menu-title) > details > ul {
  position: absolute;
  margin-inline-start: calc(0.25rem * 0);
  margin-top: calc(0.25rem * 4);
  padding-block: calc(0.25rem * 2);
  padding-inline-end: calc(0.25rem * 2);
}

.menu-horizontal > li > details > ul:before {
  content: none;
}

:where(.menu-horizontal > li:not(.menu-title) > details > ul) {
  border-radius: var(--radius-box);
  background-color: var(--color-base-100);
  box-shadow: 0 1px 3px 0 oklch(0% 0 0/0.1), 0 1px 2px -1px oklch(0% 0 0/0.1);
}

.menu-sm :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-sm :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 2.5);
  padding-block: calc(0.25rem * 1);
  font-size: 0.75rem;
}

.menu-sm .menu-title {
  padding-inline: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 2);
}

@keyframes toast {
  0% {
    scale: 0.9;
    opacity: 0;
  }

  100% {
    scale: 1;
    opacity: 1;
  }
}

:where(.btn) {
  width: unset;
}

.btn {
  display: inline-flex;
  flex-shrink: 0;
  cursor: pointer;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: center;
  gap: calc(0.25rem * 1.5);
  text-align: center;
  vertical-align: middle;
  outline-offset: 2px;
  webkit-user-select: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  padding-inline: var(--btn-p);
  color: var(--btn-fg);
  --tw-prose-links: var(--btn-fg);
  height: var(--size);
  font-size: var(--fontsize, 0.875rem);
  font-weight: 600;
  outline-color: var(--btn-color, var(--color-base-content));
  transition-property: color, background-color, border-color, box-shadow;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 0.2s;
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  background-color: var(--btn-bg);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--btn-noise);
  border-width: var(--border);
  border-style: solid;
  border-color: var(--btn-border);
  text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
  touch-action: manipulation;
  box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
  --size: calc(var(--size-field, 0.25rem) * 10);
  --btn-bg: var(--btn-color, var(--color-base-200));
  --btn-fg: var(--color-base-content);
  --btn-p: 1rem;
  --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
  --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
    0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
  --btn-noise: var(--fx-noise);
}

.prose .btn {
  text-decoration-line: none;
}

@media (hover: hover) {
  .btn:hover {
    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
  }
}

.btn:focus-visible {
  outline-width: 2px;
  outline-style: solid;
  isolation: isolate;
}

.btn:active:not(.btn-active) {
  translate: 0 0.5px;
  --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
  --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
  --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
}

.btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  box-shadow: none;
}

.btn:is(:disabled, [disabled], .btn-disabled) {
  pointer-events: none;
  --btn-border: #0000;
  --btn-noise: none;
  --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
}

@media (hover: hover) {
  .btn:is(:disabled, [disabled], .btn-disabled):hover {
    pointer-events: none;
    background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
    --btn-border: #0000;
    --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
  }
}

.btn:is(input[type="checkbox"], input[type="radio"]) {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.btn:is(input[type="checkbox"], input[type="radio"])::after {
  content: attr(aria-label);
}

.btn:where(input:checked:not(.filter .btn)) {
  --btn-color: var(--color-primary);
  --btn-fg: var(--color-primary-content);
  isolation: isolate;
}

.btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible) {
  --btn-shadow: "";
  --btn-bg: #0000;
  --btn-border: #0000;
  --btn-noise: none;
}

.btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible):not(:disabled, [disabled], .btn-disabled) {
  outline-color: currentColor;
  --btn-fg: currentColor;
}

.list {
  display: flex;
  flex-direction: column;
  font-size: 0.875rem;
}

.list :where(.list-row) {
  --list-grid-cols: minmax(0, auto) 1fr;
  position: relative;
  display: grid;
  grid-auto-flow: column;
  gap: calc(0.25rem * 4);
  border-radius: var(--radius-box);
  padding: calc(0.25rem * 4);
  word-break: break-word;
  grid-template-columns: var(--list-grid-cols);
}

.list :where(.list-row):has(.list-col-grow:nth-child(1)) {
  --list-grid-cols: 1fr;
}

.list :where(.list-row):has(.list-col-grow:nth-child(2)) {
  --list-grid-cols: minmax(0, auto) 1fr;
}

.list :where(.list-row):has(.list-col-grow:nth-child(3)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
}

.list :where(.list-row):has(.list-col-grow:nth-child(4)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
}

.list :where(.list-row):has(.list-col-grow:nth-child(5)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
}

.list :where(.list-row):has(.list-col-grow:nth-child(6)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)
        minmax(0, auto) 1fr;
}

.list :where(.list-row) :not(.list-col-wrap) {
  grid-row-start: 1;
}

.list > :not(:last-child).list-row:after, .list > :not(:last-child) .list-row:after {
  content: "";
  border-bottom: var(--border) solid;
  inset-inline: var(--radius-box);
  position: absolute;
  bottom: calc(0.25rem * 0);
  border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
}

.mockup-browser .mockup-browser-toolbar .input {
  margin-inline: auto;
  display: flex;
  height: 100%;
  align-items: center;
  gap: calc(0.25rem * 2);
  overflow: hidden;
  background-color: var(--color-base-200);
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: 0.75rem;
  direction: ltr;
}

.mockup-browser .mockup-browser-toolbar .input:before {
  content: "";
  width: calc(0.25rem * 4);
  height: calc(0.25rem * 4);
  opacity: 30%;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor' class='size-4'%3E%3Cpath fill-rule='evenodd' d='M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z' clip-rule='evenodd' /%3E%3C/svg%3E%0A");
}

@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}

.tabs {
  display: flex;
  flex-wrap: wrap;
  --tabs-height: auto;
  --tabs-direction: row;
  height: var(--tabs-height);
  flex-direction: var(--tabs-direction);
}

.tab:checked + .tab-content, .tab:is(label:has(:checked)) + .tab-content, .tab:is(.tab-active, [aria-selected="true"]) + .tab-content {
  display: block;
  height: 100%;
}

.tabs-lift:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
  --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
          var(--tab-border-color);
}

.tabs-lift .tab-content {
  --tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
  --tabcontent-radius-ss: 0;
  --tabcontent-radius-se: var(--radius-box);
  --tabcontent-radius-es: var(--radius-box);
  --tabcontent-radius-ee: var(--radius-box);
}

.tabs-lift :checked + .tab-content:nth-child(1), .tabs-lift :checked + .tab-content:nth-child(n + 3), .tabs-lift label:has(:checked) + .tab-content:nth-child(1), .tabs-lift label:has(:checked) + .tab-content:nth-child(n + 3), .tabs-lift :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(1), .tabs-lift :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(n + 3) {
  --tabcontent-radius-ss: var(--radius-box);
}

.tabs-top:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
  --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
          var(--tab-border-color);
}

.tabs-top .tab-content {
  --tabcontent-order: 1;
  --tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
  --tabcontent-radius-ss: 0;
  --tabcontent-radius-se: var(--radius-box);
  --tabcontent-radius-es: var(--radius-box);
  --tabcontent-radius-ee: var(--radius-box);
}

.tabs-top :checked + .tab-content:nth-child(1), .tabs-top :checked + .tab-content:nth-child(n + 3), .tabs-top label:has(:checked) + .tab-content:nth-child(1), .tabs-top label:has(:checked) + .tab-content:nth-child(n + 3), .tabs-top :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(1), .tabs-top :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(n + 3) {
  --tabcontent-radius-ss: var(--radius-box);
}

.tabs-bottom:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
  --tab-border-colors: #0000 var(--tab-border-color) var(--tab-border-color)
          var(--tab-border-color);
}

.tabs-bottom .tab-content {
  --tabcontent-order: 0;
  --tabcontent-margin: 0 0 calc(-1 * var(--border)) 0;
  --tabcontent-radius-ss: var(--radius-box);
  --tabcontent-radius-se: var(--radius-box);
  --tabcontent-radius-es: 0;
  --tabcontent-radius-ee: var(--radius-box);
}

.tabs-bottom > :checked + .tab-content:not(:nth-child(2)), .tabs-bottom > :is(label:has(:checked)) + .tab-content:not(:nth-child(2)), .tabs-bottom > :is(.tab-active, [aria-selected="true"]) + .tab-content:not(:nth-child(2)) {
  --tabcontent-radius-es: var(--radius-box);
}

.tab-content {
  order: 1;
  order: var(--tabcontent-order);
  display: none;
  border-color: transparent;
  --tabcontent-radius-ss: 0;
  --tabcontent-radius-se: 0;
  --tabcontent-radius-es: 0;
  --tabcontent-radius-ee: 0;
  --tabcontent-order: 1;
  width: 100%;
  margin: var(--tabcontent-margin);
  border-width: var(--border);
  border-start-start-radius: var(--tabcontent-radius-ss);
  border-start-end-radius: var(--tabcontent-radius-se);
  border-end-start-radius: var(--tabcontent-radius-es);
  border-end-end-radius: var(--tabcontent-radius-ee);
}

.chat {
  display: grid;
  -moz-column-gap: calc(0.25rem * 3);
       column-gap: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 1);
}

@keyframes radio {
  0% {
    padding: 5px;
  }

  50% {
    padding: 3px;
  }
}

@keyframes skeleton {
  0% {
    background-position: 150%;
  }

  100% {
    background-position: -50%;
  }
}

.visible {
  visibility: visible;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.inset-0 {
  inset: 0px;
}

.left-1\/2 {
  left: 50%;
}

.right-3 {
  right: 0.75rem;
}

.top-0 {
  top: 0px;
}

.top-1\/2 {
  top: 50%;
}

.top-\[49\%\] {
  top: 49%;
}

.z-0 {
  z-index: 0;
}

.z-10 {
  z-index: 10;
}

.z-20 {
  z-index: 20;
}

.z-50 {
  z-index: 50;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-5 {
  margin-top: 1.25rem;
  margin-bottom: 1.25rem;
}

.mb-10 {
  margin-bottom: 2.5rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-5 {
  margin-bottom: 1.25rem;
}

.mr-2 {
  margin-right: 0.5rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mt-3 {
  margin-top: 0.75rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-5 {
  margin-top: 1.25rem;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.table {
  display: table;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.h-5 {
  height: 1.25rem;
}

.h-\[400px\] {
  height: 400px;
}

.h-\[500px\] {
  height: 500px;
}

.h-\[570px\] {
  height: 570px;
}

.h-\[7\%\] {
  height: 7%;
}

.h-full {
  height: 100%;
}

.h-screen {
  height: 100vh;
}

.h-\[93\%\] {
  height: 93%;
}

.min-h-screen {
  min-height: 100vh;
}

.w-1\/2 {
  width: 50%;
}

.w-32 {
  width: 8rem;
}

.w-5 {
  width: 1.25rem;
}

.w-52 {
  width: 13rem;
}

.w-\[10\%\] {
  width: 10%;
}

.w-\[1000px\] {
  width: 1000px;
}

.w-\[15\%\] {
  width: 15%;
}

.w-\[17\%\] {
  width: 17%;
}

.w-\[20\%\] {
  width: 20%;
}

.w-\[5\%\] {
  width: 5%;
}

.w-\[600px\] {
  width: 600px;
}

.w-\[7\%\] {
  width: 7%;
}

.w-\[80\%\] {
  width: 80%;
}

.w-full {
  width: 100%;
}

.min-w-\[1000px\] {
  min-width: 1000px;
}

.max-w-full {
  max-width: 100%;
}

.-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer {
  cursor: pointer;
}

.list-disc {
  list-style-type: disc;
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-evenly {
  justify-content: space-evenly;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-5 {
  gap: 1.25rem;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-y-auto {
  overflow-y: auto;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-box {
  border-radius: var(--radius-box);
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-sm {
  border-radius: 0.125rem;
}

.rounded-tl-md {
  border-top-left-radius: 0.375rem;
}

.rounded-tr-md {
  border-top-right-radius: 0.375rem;
}

.border {
  border-width: 1px;
}

.border-2 {
  border-width: 2px;
}

.border-b-2 {
  border-bottom-width: 2px;
}

.border-gray-200 {
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity, 1));
}

.border-gray-300 {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity, 1));
}

.border-gray-700 {
  --tw-border-opacity: 1;
  border-color: rgb(55 65 81 / var(--tw-border-opacity, 1));
}

.bg-\[\#f0f0f0\] {
  --tw-bg-opacity: 1;
  background-color: rgb(240 240 240 / var(--tw-bg-opacity, 1));
}

.bg-base-100 {
  background-color: var(--color-base-100);
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity, 1));
}

.bg-blue-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(37 99 235 / var(--tw-bg-opacity, 1));
}

.bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity, 1));
}

.bg-gray-300 {
  --tw-bg-opacity: 1;
  background-color: rgb(209 213 219 / var(--tw-bg-opacity, 1));
}

.bg-gray-800 {
  --tw-bg-opacity: 1;
  background-color: rgb(31 41 55 / var(--tw-bg-opacity, 1));
}

.bg-red-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 226 226 / var(--tw-bg-opacity, 1));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.bg-opacity-50 {
  --tw-bg-opacity: 0.5;
}

.p-10 {
  padding: 2.5rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-5 {
  padding: 1.25rem;
}

.p-6 {
  padding: 1.5rem;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-10 {
  padding-left: 2.5rem;
  padding-right: 2.5rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.pl-5 {
  padding-left: 1.25rem;
}

.pt-8 {
  padding-top: 2rem;
}

.text-center {
  text-align: center;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.font-semibold {
  font-weight: 600;
}

.text-gray-100 {
  --tw-text-opacity: 1;
  color: rgb(243 244 246 / var(--tw-text-opacity, 1));
}

.text-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity, 1));
}

.text-gray-800 {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity, 1));
}

.text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity, 1));
}

.text-green-500 {
  --tw-text-opacity: 1;
  color: rgb(34 197 94 / var(--tw-text-opacity, 1));
}

.text-orange-500 {
  --tw-text-opacity: 1;
  color: rgb(249 115 22 / var(--tw-text-opacity, 1));
}

.text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity, 1));
}

.text-red-600 {
  --tw-text-opacity: 1;
  color: rgb(220 38 38 / var(--tw-text-opacity, 1));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.opacity-80 {
  opacity: 0.8;
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline {
  outline-style: solid;
}

.grayscale {
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-200 {
  transition-duration: 200ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.join {
  display: inline-flex;
  align-items: stretch;
  --join-ss: 0;
  --join-se: 0;
  --join-es: 0;
  --join-ee: 0;
}

.join :where(.join-item) {
  border-start-start-radius: var(--join-ss, 0);
  border-start-end-radius: var(--join-se, 0);
  border-end-start-radius: var(--join-es, 0);
  border-end-end-radius: var(--join-ee, 0);
}

.join :where(.join-item) * {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join > .join-item:where(:first-child) {
  --join-ss: var(--radius-field);
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: 0;
}

.join :first-child:not(:last-child) :where(.join-item) {
  --join-ss: var(--radius-field);
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: 0;
}

.join > .join-item:where(:last-child) {
  --join-ss: 0;
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: var(--radius-field);
}

.join :last-child:not(:first-child) :where(.join-item) {
  --join-ss: 0;
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: var(--radius-field);
}

.join > .join-item:where(:only-child) {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join :only-child :where(.join-item) {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.rounded-box {
  border-radius: var(--radius-box);
}

.hover\:bg-gray-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity, 1));
}

.hover\:bg-gray-900:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / var(--tw-bg-opacity, 1));
}

@media (min-width: 640px) {
  .sm\:w-1\/2 {
    width: 50%;
  }

  .sm\:px-0 {
    padding-left: 0px;
    padding-right: 0px;
  }
}

@media (min-width: 1024px) {
  .lg\:flex {
    display: flex;
  }

  .lg\:hidden {
    display: none;
  }

  .lg\:w-1\/3 {
    width: 33.333333%;
  }

  .lg\:px-24 {
    padding-left: 6rem;
    padding-right: 6rem;
  }
}

@media (min-width: 1536px) {
  .\32xl\:w-1\/4 {
    width: 25%;
  }
}
